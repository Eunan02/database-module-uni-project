SELECT c.Address, count(e.StudentID) as 'No of Students' FROM Campus c left JOIN Classroom ca  on c.CaID=ca.CaID left join SpaceAssign s on ca.RmID=s.RmID left join Teach t on s.SpaID=t.SpaID left join Enrolment e on t.ModuleID=e.ModuleID GROUP BY(c.CaID);
SELECT d.DeptName, COUNT(e.StudentID) as Student_Count from Module m INNER JOIN Enrolment e on m.ModuleID = e.ModuleID inner join Department d on m.DeptID=d.DeptID group by d.DeptID having COUNT(e.StudentID)>50;
select s.StudentID, s.StudentName,m.deptID from Student s inner join Enrolment e on s.StudentID=e.StudentID inner join Module m on m.ModuleID=e.ModuleID where e.Year=2020 GROUP BY s.StudentID having COUNT(if(m.TMode='Online',1,null))>=1 ;
INSERT INTO `Campus`(`CaID`, `Address`, `GmName`, `Country`, `Status`) VALUES (5,'122 Pineapple Ave, New York','Michael Carlos','USA','Open soon');
SELECT s.StaffID, s.FirstName,s.LastName,s.CaID,c.Address from Staff s inner join Campus c on s.CaID = c.CaID WHERE YEAR(s.LeftD)= 2019 and s.Current=1 GROUP by s.StaffID;
select cl.RmID, cl.Capacity,cl.Location from Campus c left join Classroom cl ON c.CaID=cl.CaID left join SpaceAssign sp on sp.RmID = cl.RmID left JOIN Teach t ON t.TID=sp.TID where c.CaID=2 and t.TID not in (SELECT t.TID where t.Year=2018) GROUP BY cl.RmID;
/*Query 6:I didn't include a check for approved as i interpetted assigned meaning they were on the table, so if they were assigned teaching for 2018, it won't of matter if they were approved, as you have to be assigned to be approved, therefore a check isn't needed for approved.*/
 SELECT s.StaffID, s.FirstName,s.LastName, s.DeptID, d.DeptName FROM Staff s LEFT join Department d on s.DeptID=d.DeptID WHERE s.StaffID not IN (SELECT StaffID from Allocation) ;
SELECT s.StaffID, s.Title, s.FirstName,d.Deptname from Staff s inner join Department d on d.DeptID=s.DeptID where s.LeftD>'2017-12-31' and s.Salary>(SELECT AVG(Salary) from Staff GROUP by s.DeptID) and s.StaffID NOT IN (SELECT StaffID from Teach WHERE Year=2019) and s.ContractType='Full Time';
SELECT ac.AcID,ac.Title,c.address,b.Amount,b.Status FROM Activity ac INNER JOIN Campus c ON ac.CaID = c.CaID INNER JOIN Budget b ON ac.BuID = b.BuID INNER JOIN Allocation al ON ac.AcID = al.AcID WHERE al.StaffID IN (SELECT s.StaffID FROM Teach t INNER JOIN Staff s ON t.StaffID = s.StaffID INNER JOIN Module m ON t.ModuleID = m.ModuleID INNER JOIN SpaceAssign sa ON t.SpaID = sa.SpaID INNER JOIN Campus c  ON s.CaID = c.CaID WHERE t.Year = 2019 AND c.CaID=4  GROUP BY s.StaffID HAVING COUNT(*) >= 2) AND al.StaffID IN  ( SELECT SupervisorID  FROM Staff GROUP BY SupervisorID HAVING COUNT(*) > 1)AND ac.Internal = 1;
SELECT act.Title, COUNT(al.StaffID)from Activity act inner join Allocation al on al.AcID = act.AcID  inner join Budget b on b.BuID=act.BuID INNER join Staff s on s.StaffID=al.StaffID WHERE (act.Ended is null) and b.Amount>300 GROUP by  act.AcID having COUNT(al.StaffID)>=2  and COUNT(IF(s.Current=1,1,null))=COUNT(al.StaffID);
/*Query 10:I use ended not null for completed, not planning or ongoing as planning has a end date, so it must be completed*/
SELECT s.StaffID, s.FirstName,s.LastName,ac.Title,ac.BuID,b.Amount,ac.Status FROM Staff s join Campus ca on ca.CaID=s.CaID join Allocation al on al.StaffID=s.StaffID join Activity ac on ac.AcID=al.AcID join Budget b on ac.BuID=b.BuID where s.ContractType="Full Time" and s.Joined < '2017-12-31'AND (s.LeftD IS NULL OR s.LeftD > '2017-12-31') and ac.CaID=2 and s.Current=1;
/*Query 11: Didn't include current check as it was for 2017, and they may of been a current employee then, but not now, i also checked date startdate was before last day in 2017 because i believe the text is saying is for any date in 2017, not the full year*/
SELECT  s.StaffID,s.FirstName,s.LastName, ca.CaID,ca.Address, ca.GmName,ca.Country,ca.Status,COUNT(*) AS "Classroom# Used" FROM Staff s INNER JOIN Teach t ON s.StaffID = t.StaffID INNER JOIN SpaceAssign sa ON t.SpaID = sa.SpaID INNER JOIN Classroom cl ON sa.RmID = cl.RmID INNER JOIN Campus ca ON cl.CaID = ca.CaID WHERE t.YEAR IN(  2018,2019) GROUP BY s.StaffID;